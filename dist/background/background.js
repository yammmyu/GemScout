chrome.runtime.onInstalled.addListener(()=>{console.log("GemScout extension installed"),chrome.storage.sync.get(["gemscout_settings"],o=>{if(!o.gemscout_settings){const r={autoAnalyze:!0,showOverlay:!0,jobSites:["linkedin.com","indeed.com","glassdoor.com"],matchThreshold:70,notifications:!0};chrome.storage.sync.set({gemscout_settings:r}),console.log("Default settings initialized")}})});chrome.action.onClicked.addListener(o=>{console.log("Extension icon clicked for tab:",o.url)});chrome.runtime.onMessage.addListener((o,r,c)=>{var t;switch(console.log("Message received:",o),o.type){case"PAGE_ANALYZED":console.log("Page analyzed:",o.data),chrome.storage.local.get(["page_analyses"],e=>{var a;const s=e.page_analyses||[];s.unshift({...o.data,timestamp:Date.now(),tabId:(a=r.tab)==null?void 0:a.id}),s.length>50&&s.splice(50),chrome.storage.local.set({page_analyses:s})}),chrome.storage.sync.get(["gemscout_settings"],e=>{const s=e.gemscout_settings;s!=null&&s.notifications&&o.data.jobIndicators&&chrome.notifications.create({type:"basic",iconUrl:"assets/icon-48.png",title:"GemScout",message:"Job opportunities detected on this page!"})}),c({success:!0});break;case"GET_ANALYSES":return chrome.storage.local.get(["page_analyses"],e=>{c({success:!0,analyses:e.page_analyses||[]})}),!0;case"CLEAR_ANALYSES":return chrome.storage.local.remove(["page_analyses"],()=>{c({success:!0})}),!0;case"TOGGLE_OVERLAY":if((t=r.tab)!=null&&t.id)return chrome.tabs.sendMessage(r.tab.id,{type:"TOGGLE_OVERLAY"},e=>{c(e||{success:!1,error:"No response from content script"})}),!0;break;case"ANALYZE_CURRENT_TAB":return chrome.tabs.query({active:!0,currentWindow:!0},e=>{var s;(s=e[0])!=null&&s.id?chrome.tabs.sendMessage(e[0].id,{type:"ANALYZE_PAGE"},a=>{c(a||{success:!1,error:"No response from content script"})}):c({success:!1,error:"No active tab found"})}),!0;case"start_discovery":return console.log("Starting discovery process..."),console.log("Max jobs requested:",o.maxJobs||5),chrome.tabs.query({active:!0,currentWindow:!0},e=>{var s,a;if((s=e[0])!=null&&s.id&&((a=e[0])!=null&&a.url)){const n=e[0];if(console.log("Active tab identified:",n.url),n.url.startsWith("chrome://")||n.url.startsWith("chrome-extension://")||n.url.startsWith("moz-extension://")){console.error("Cannot run content script on Chrome internal pages:",n.url),c({success:!1,error:"Content scripts cannot run on Chrome internal pages. Please navigate to a regular webpage (http:// or https://) and try again."});return}chrome.scripting.executeScript({target:{tabId:n.id},func:()=>typeof window.gemscoutLoaded<"u"},i=>{var g;((g=i==null?void 0:i[0])==null?void 0:g.result)===!0?(console.log("Content script already loaded, sending message directly"),m(n.id,c,o.maxJobs)):(console.log("Content script not detected, injecting..."),chrome.scripting.executeScript({target:{tabId:n.id},files:["content/contentScript.js"]},()=>{if(chrome.runtime.lastError){console.error("Failed to inject content script:",chrome.runtime.lastError.message),c({success:!1,error:"Failed to inject content script: "+chrome.runtime.lastError.message});return}setTimeout(()=>{m(n.id,c,o.maxJobs)},100)}))})}else console.error("No active tab found"),c({success:!1,error:"No active tab found"})}),!0;default:console.log("Unknown message type:",o.type),c({success:!1,error:"Unknown message type"})}});function l(o){if(console.log("🎭 Generating mock job data as fallback"),!["job","career","position","hiring","apply","engineer","developer","manager","analyst"].some(e=>o.text.toLowerCase().includes(e)||o.url.toLowerCase().includes(e)))return[];let t="Unknown Company";try{const e=new URL(o.url).hostname.split(".");t=e[e.length-2]||"Unknown Company",t=t.charAt(0).toUpperCase()+t.slice(1)}catch{}return[{title:"Job Opening Detected",company:t,location:"Location TBD",link:o.url,description:"Job posting detected on this page. Full AI analysis not available."}]}function m(o,r,c){chrome.tabs.sendMessage(o,{action:"extract_snapshot"},async t=>{if(chrome.runtime.lastError){console.error("Error communicating with content script:",chrome.runtime.lastError.message||chrome.runtime.lastError),r({success:!1,error:chrome.runtime.lastError.message||"Failed to communicate with content script"});return}if(t&&!t.error){console.log("=== DOM SNAPSHOT RECEIVED ==="),console.log("URL:",t.url),console.log("Text Length:",t.text.length),console.log("Links Count:",t.links.length),console.log("Text Sample (first 200 chars):",t.text.substring(0,200)+"..."),console.log("Links Sample (first 5):",t.links.slice(0,5)),console.log("=== END SNAPSHOT ===");try{console.log("🚀 Delegating AI job analysis to content script..."),chrome.tabs.sendMessage(o,{type:"analyze_with_ai",snapshot:t,maxJobs:c||5},async e=>{let s=[];chrome.runtime.lastError?(console.error("❌ Failed to communicate with content script for AI analysis:",chrome.runtime.lastError.message),s=l(t)):e!=null&&e.success&&e.jobs?(s=e.jobs,console.log("✅ AI analysis completed via content script:",s.length,"jobs")):(console.error("❌ AI analysis failed in content script:",e==null?void 0:e.error),s=l(t)),await u(t,s,o,r)});return}catch(e){console.error("❌ Error setting up AI analysis:",e);const s=l(t);await u(t,s,o,r)}}else console.error("Failed to extract snapshot:",t==null?void 0:t.error),r({success:!1,error:(t==null?void 0:t.error)||"No snapshot received"})})}async function u(o,r,c,t){try{console.log("📊 AI Analysis Results:"),console.log("Jobs found:",r.length),r.length>0&&console.log("Job details:",r),await chrome.storage.local.set({lastSnapshot:{...o,timestamp:Date.now(),tabId:c},jobs:r,lastJobAnalysis:{timestamp:Date.now(),url:o.url,jobCount:r.length,jobs:r}}),console.log("💾 Results stored successfully"),t({success:!0,snapshot:o,jobs:r,message:`DOM snapshot extracted and analyzed. Found ${r.length} job posting(s).`})}catch(e){console.error("❌ Storage or response failed:",e),t({success:!1,error:"Failed to store results or send response: "+e.message})}}chrome.tabs.onUpdated.addListener((o,r,c)=>{r.status==="complete"&&c.url&&chrome.storage.sync.get(["gemscout_settings"],t=>{const e=t.gemscout_settings;e!=null&&e.autoAnalyze&&(e.jobSites||["linkedin.com","indeed.com","glassdoor.com"]).some(n=>{var i;return(i=c.url)==null?void 0:i.includes(n)})&&setTimeout(()=>{chrome.tabs.sendMessage(o,{type:"ANALYZE_PAGE"})},2e3)})});chrome.runtime.onStartup.addListener(()=>{chrome.storage.sync.get(["gemscout_settings"],o=>{const r=o.gemscout_settings;r!=null&&r.notifications&&chrome.notifications.getPermissionLevel(c=>{c!=="granted"&&console.log("Notification permission not granted")})})});
